VikingScript {
  Program   = Statement+
  Statement = let id "=" Exp                       -- vardec
            | function id "(" Params ")" "=" Exp   -- fundec
            | id "=" Exp                           -- assign
            | print Exp                            -- print
  Block     = "{" Statement* "}"

  Exp       = ("-" | "!") Exp7                        -- unary
            | Exp1
  Exp1      = Exp1 "||" Exp2                          -- binary
            | Exp2
  Exp2      = Exp2 "&&" Exp3                          -- binary
            | Exp3
  Exp3      = Exp4 ("lessThanOrEqual"|"lessThan"|"equal"|"doesNotEqual"|"greaterThanOrEqual"|"greaterThan") Exp4 -- binary
            | Exp4
  Exp4      = Exp4 ("+" | "-") Exp5                   -- binary
            | Exp5
  Exp5      = Exp5 ("*" | "/" | "%") Exp6             -- binary
            | Exp6
  Exp6      = Exp7 "**" Exp6                          -- binary
            | Exp7
  Exp7      = num
            | true
            | false
            | Call
            | id
            | "(" Exp ")"                             -- parens
            | stringlit

  stringlit   = "\"" char* "\""
  char        = ~control ~"\\" ~"\"" any
              | "\\" ("n" | "t" | "\"" | "\\")                --escape
              | "\\u{" hex hex? hex? hex? hex? hex? "}"       --codepoint
  
  control     = "\x00".."\x1f" | "\x80".."\x9f"
  hex         = hexDigit

  Call      = id "(" Args ")"
  Params    = ListOf<id, ",">
  Args      = ListOf<Exp, ",">

  let       = "kalla" ~idchar
  function  = "valhalla" ~idchar
  true      = "thor" ~idchar
  false     = "loki" ~idchar
  print     = "runes" ~idchar
  keyword   = let | function | print | true | false
  num       = digit+ ("." digit+)? 
  id        = ~keyword letter idchar*
  idchar    = letter | digit | "_"
  space    += "//" (~"\n" any)* ("\n" | end)          -- comment
}
